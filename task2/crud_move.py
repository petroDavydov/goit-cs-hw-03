from dotenv import load_dotenv
import os
from pymongo import MongoClient
from pymongo.server_api import ServerApi
from colorama import init, Fore
from env import username, password, cluster
from cats_db import cats

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–ª—å–æ—Ä–æ–≤–æ–≥–æ –≤–∏–≤–æ–¥—É
init(autoreset=True)
load_dotenv()

client = MongoClient(f"mongodb+srv://{username}:{password}@{cluster}", server_api=ServerApi('1'))
db = client.cats_hw3
cats_collection = db.cats

def add_sample_cats():
    cats_collection.delete_many({})
    cats_collection.insert_many(cats)
    print(Fore.GREEN + "–ö–æ—Ç–∏ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω—ñ.")

def get_all_cats():
    try:
        cats = cats_collection.find()
        for cat in cats:
            print(Fore.CYAN + str(cat))
    except Exception as e:
        print(Fore.RED + f"–ü–æ–º–∏–ª–∫–∞: {e}")

def get_cat_by_name(name):
    try:
        cat = cats_collection.find_one({"name": name})
        if cat:
            print(Fore.GREEN + str(cat))
        else:
            print(Fore.YELLOW + f"–ö–æ—Ç–∞ –∑ —ñ–º'—è–º {name} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        print(Fore.RED + f"–ü–æ–º–∏–ª–∫–∞: {e}")

def update_cat_age(name, new_age):
    try:
        result = cats_collection.update_one({"name": name}, {"$set": {"age": new_age}})
        if result.modified_count > 0:
            print(Fore.GREEN + f"–í—ñ–∫ –∫–æ—Ç–∞ {name} –æ–Ω–æ–≤–ª–µ–Ω–æ.")
        else:
            print(Fore.YELLOW + f"–ö–æ—Ç–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        print(Fore.RED + f"–ü–æ–º–∏–ª–∫–∞: {e}")

def add_feature_to_cat(name, new_feature):
    try:
        result = cats_collection.update_one({"name": name}, {"$addToSet": {"features": new_feature}})
        if result.modified_count > 0:
            print(Fore.GREEN + f"–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –¥–æ–¥–∞–Ω–∞.")
        else:
            print(Fore.YELLOW + f"–ö–æ—Ç–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        print(Fore.RED + f"–ü–æ–º–∏–ª–∫–∞: {e}")

def delete_cat_by_name(name):
    try:
        result = cats_collection.delete_one({"name": name})
        if result.deleted_count > 0:
            print(Fore.GREEN + f"–ö–æ—Ç–∞ {name} –≤–∏–¥–∞–ª–µ–Ω–æ.")
        else:
            print(Fore.YELLOW + f"–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        print(Fore.RED + f"–ü–æ–º–∏–ª–∫–∞: {e}")

def delete_all_cats():
    try:
        result = cats_collection.delete_many({})
        print(Fore.GREEN + f"–í–∏–¥–∞–ª–µ–Ω–æ: {result.deleted_count}")
    except Exception as e:
        print(Fore.RED + f"–ü–æ–º–∏–ª–∫–∞: {e}")

def interactive_menu():
    while True:
        print(Fore.MAGENTA + "\nüß† –í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é:")
        print("1. –í—Å—ñ –∫–æ—Ç–∏")
        print("2. –ü–æ—à—É–∫ –∫–æ—Ç–∞")
        print("3. –û–Ω–æ–≤–∏—Ç–∏ –≤—ñ–∫")
        print("4. –î–æ–¥–∞—Ç–∏ —Ñ—ñ—á—É")
        print("5. –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ç–∞")
        print("6. –û—á–∏—Å—Ç–∏—Ç–∏ –≤—Å—é –±–∞–∑—É")
        print("0. –í–∏—Ö—ñ–¥")
        choice = input(">> ")

        if choice == "1":
            get_all_cats()
        elif choice == "2":
            get_cat_by_name(input("–Ü–º‚Äô—è: "))
        elif choice == "3":
            update_cat_age(input("–Ü–º‚Äô—è: "), int(input("–ù–æ–≤–∏–π –≤—ñ–∫: ")))
        elif choice == "4":
            add_feature_to_cat(input("–Ü–º‚Äô—è: "), input("–ù–æ–≤–∞ —Ñ—ñ—á–∞: "))
        elif choice == "5":
            delete_cat_by_name(input("–Ü–º‚Äô—è: "))
        elif choice == "6":
            delete_all_cats()
        elif choice == "0":
            print("üëã –î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ!")
            break
        else:
            print(Fore.RED + "–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞.")

if __name__ == "__main__":
    add_sample_cats()
    interactive_menu()
